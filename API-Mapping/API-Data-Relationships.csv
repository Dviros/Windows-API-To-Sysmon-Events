API,Event Registration Mechanism ,Data Sensor,Event ID,Description,Verified,Notes
CreateProcess,PsSetCreateProcessNotifyRoutine ,Sysmon,1,Process creation,Yes,
CreateProcessAsUser,PsSetCreateProcessNotifyRoutine,Sysmon,1,Process creation,Yes,
CreateProcessWithToken,PsSetCreateProcessNotifyRoutine,Sysmon,1,Process creation,Yes,
,,,,,,
NtCreateFile,FltRegisterFilter(registers a minifilter),Sysmon,2,A process changed a file creation time,Yes,"Verify. Correct minifilter, but does this create a new file in memory?"
SetFileTime,FltRegisterFilter(registers a minifilter),Sysmon,2,A process changed a file creation time,Yes,
,,,,,,
None,Logging Session: NT KernelFunction: StartTraceFlag: EVENT_TRACE_FLAG_NETWORK_TCPIP,Sysmon ,3,Network connection,Yes ,"Research done by Matt Graeber
Pulled through Sysmon Binary (EXE)
pulls from ETW Events/NT Kernel Logger within Sysmon Trace (specifies EVENT_TRACE_FLAG_NETWORK_TCPIP - captures TCP /UDP) "
,,,,,,
ExitThread,PsSetCreateProcessNotifyRoutine,Sysmon,5,Process terminated,Yes,
ExitProcess,PsSetCreateProcessNotifyRoutine,Sysmon,5,Process terminated,Yes,
,,,,,,
,,,,,,
NtMapViewOfSection,PsSetLoadImageNotifyRoutine,Sysmon,6,Driver loaded,Yes,
LoadLibrary,PsSetLoadImageNotifyRoutine,Sysmon,6,Driver loaded,Yes,
,,,,,,
ImageLoad,PsSetLoadImageNotifyRoutine,Sysmon,7,Image loaded,Yes,
NtMapViewOfSection,PsSetLoadImageNotifyRoutine,Sysmon,7,Image loaded,Yes,
LoadLibrary,PsSetLoadImageNotifyRoutine,Sysmon,7,Image loaded,Yes,
,,,,,,
CreateRemoteThread,PsSetCreateThreadNotifyRoutine,Sysmon,8,CreateRemoteThread,Yes,
NtCreateThread,PsSetCreateThreadNotifyRoutine,Sysmon,8,CreateRemoteThread,Yes,
,,,,,,
NtCreateFile,FltRegisterFilter(registers a minifilter),Sysmon,9,RawAccessRead,Yes,Reads a drive using the \\.\ denotation
KERNELBASECreateFileInternal,FltRegisterFilter(registers a minifilter),Sysmon,9,RawAccessRead,Yes,Originally thought was FltReadFile
CreateFile,FltRegisterFilter(registers a minifilter),Sysmon,9,RawAccessRead,Yes,
ObpLookupObjectName,FltRegisterFilter(registers a minifilter),Sysmon,9,RawAccessRead,Yes,
,,,,,,
NtOpenProcess ,ObRegisterCallbacks,Sysmon,10,ProcessAccess,Yes,
NtAlpcOpenSenderProcess,ObRegisterCallbacks,Sysmon,10,ProcessAccess,Yes,
,,,,,,
NtCreateFile,FltRegisterFilter(registers a minifilter),Sysmon,11,FileCreate,Yes ,
KERNELBASECreateFileInternal,FltRegisterFilter(registers a minifilter),Sysmon,11,FileCreate,Yes ,
CreateFile,FltRegisterFilter(registers a minifilter),Sysmon,11,FileCreate,Yes ,
CopyFile,FltRegisterFilter(registers a minifilter),Sysmon,11,FileCreate,Yes ,
MoveFile ,FltRegisterFilter(registers a minifilter),Sysmon ,11,FileCreate,Yes ,This ONLY happens if it is moved between volumes not diretories. 
CreateDirectory,FltRegisterFilter(registers a minifilter),Sysmon ,11,FileCreate,Yes ,
,,,,,,
CmCreateKey,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,CmRegistryCallback will register a RegistryCallback routine. Driver then goes through a case statement to determine which API is called. 
RegCreateKey,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
NtCreateKey,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
NtQueryKey,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
NtDeleteKey,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
RegDeleteTree,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
RegDeleteValue,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
RegDeleteKey,CmRegisterCallback,Sysmon,12,RegistryEvent (Object create and delete),Yes,
,,,,,,
NtSetValueKey,CmRegisterCallback,Sysmon,13,RegistryEvent (Value Set),Yes,
RegSetValue,CmRegisterCallback,Sysmon,13,RegistryEvent (Value Set),Yes,
,,,,,,
NtRenameKey,CmRegisterCallback,Sysmon,14,RegistryEvent (Key and Value Rename),Yes,
,,,,,,
KERNELBASECreateFileW,FltRegisterFilter(registers a minifilter),Sysmon,15,FileCreateStreamHash,Yes,
NtCreateKey,FltRegisterFilter(registers a minifilter),Sysmon,15,FileCreateStreamHash,Yes,
KERNELBASECreateFileInternal,FltRegisterFilter(registers a minifilter),Sysmon,15,FileCreateStreamHash,Yes,
,,,,,,
CreateNamedPipeFile,IoSetCompletionRoutineEx,Sysmon,17,PipeEvent (Pipe Created),Yes,
CreateNamedPipe,IoSetCompletionRoutineEx,Sysmon,17,PipeEvent (Pipe Created),Yes,
,,,,,,
ConnectNamedPipe,IoSetCompletionRoutineEx,Sysmon,18,PipeEvent (Pipe Connected),Yes,
NtCreateFile,IoSetCompletionRoutineEx,Sysmon,18,PipeEvent (Pipe Connected),Yes,
CallNamedPipe,IoSetCompletionRoutineEx,Sysmon,18,PipeEvent (Pipe Connected),Yes,"Calling CallNamedPipe is equivalent to calling the CreateFile (or WaitNamedPipe, if CreateFile cannot open the pipe immediately), TransactNamedPipe, and CloseHandle functions. CreateFile is called with an access flag of GENERIC_READ | GENERIC_WRITE, and an inherit handle flag of FALSE.
CallNamedPipe fails if the pipe is a byte-type pipe. https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-callnamedpipea"
,,,,,,
COM API's,ExecNotificationQueryAsyn OR ExecNotificationQuery,Sysmon,19,WmiEvent (WmiEventFilter activity detected),Yes,Pulled through Sysmon Binary (EXE)
COM API's,ExecNotificationQueryAsyn OR ExecNotificationQuery,Sysmon,20,WmiEvent (WmiEventConsumer activity detected),Yes,Pulled through Sysmon Binary (EXE)
COM API's,ExecNotificationQueryAsyn OR ExecNotificationQuery,Sysmon,21, WmiEvent (WmiEventConsumerToFilter activity detected),Yes,Pulled through Sysmon Binary (EXE)
,,,,,,
DnsQueryEx,Pulls from Microsoft-Windows-DNS-Client ETW Provider,Sysmon,22,DNSEvent (DNS query),Yes,Pulled through Sysmon Binary (EXE)
DnsQuery_A,Pulls from Microsoft-Windows-DNS-Client ETW Provider,Sysmon,22,DNSEvent (DNS query),Yes,Pulled through Sysmon Binary (EXE)
DnsQuery_W,Pulls from Microsoft-Windows-DNS-Client ETW Provider,Sysmon,22,DNSEvent (DNS query),Yes,Pulled through Sysmon Binary (EXE)
,,,,,,
Mapping Diagrams can be found: https://drive.google.com/drive/folders/1y5ZfOveeXny53ru070PoTl4QRaFP-FPN,,,,,,
,,,,,,
,,,,,,
"Credit:
A big thanks and credit goes out to the following individuals for the help and insight they had on this project:
Matt Graeber - Guiding me through the Reverse Engineering, with walking me through muliple function calls, and verifying many of these call back functions. 
Brian Reitz - Helping me understand function calls and interprocess communication.
Jared Atkinson - Helping me understand function calls and interprocess communication. ",,,,,,
,,,,,,
"Resources: 
https://docs.microsoft.com/en-us/windows-hardware/drivers/kernel/what-does-the-zw-prefix-mean-
https://specterops.io/assets/resources/Subverting_Sysmon.pdf
https://blog.xpnsec.com/evading-sysmon-dns-monitoring/
https://github.com/hunters-forge/OSSEM/tree/master/data_dictionaries/windows/sysmon
https://docs.google.com/spreadsheets/d/1Y3MHsgDWj_xH4qrqIMs4kYJq1FSuqv4LqIrcX24L10A/edit#gid=0",,,,,,
,,,,,,
"Research Notes:
- API(A) - API accepts ASCII character strings. API(W) - api accepts wide character strings
- Nt(API) - User mode. Zw(API) called from kernel. If Nt(API) Zw is implied.
- API's listed are ones that were seen within the stack during a breakpoint of the event registration mechanism ",,,,,,
,,,,,,
"Verifications: 
Were made through IdaPro and WinDbg. ",,,,,,